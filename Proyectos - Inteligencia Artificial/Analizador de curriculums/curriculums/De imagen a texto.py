# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S77dwwkdZDejiijtCV6ryaB9ytjSQWkJ

OperationStatusCode es para ver el status del proceso. VisualFeatureTypes es
para agregar parametro de que es lo que se quiere analizar. Array es para crear
listas. Os es para manerjar el interprete. PIL es para dar formato a las imagenes
sys es para majerar el interpreter y time para darle descanso al script
"""

import PIL
from azure.cognitiveservices.vision.computervision import ComputerVisionClient
from azure.cognitiveservices.vision.computervision.models import OperationStatusCodes
from azure.cognitiveservices.vision.computervision.models import VisualFeatureTypes
from msrest.authentication import CognitiveServicesCredentials

import sys
import os
from array import array
from PIL import Image
import time

#obtnemos la llave y el endpoint de la api
subscription_key = "6ab80046f53749548278321172218e02"
endpoint = "https://cvreaderproject.cognitiveservices.azure.com/"

#accesamos a la API

computervision_client = ComputerVisionClient(endpoint, CognitiveServicesCredentials(subscription_key))

read_image_url = "https://cdn-images.livecareer.es/images/lc/landings/examples/es/ejemplo-cv-informatico@3x.png"

#con el link de la imagen enviamos la solucitud a la api y pedimos que nos retorne le esta doel preceso

read_response = computervision_client.read(read_image_url,  raw=True)
read_operation_location = read_response.headers["Operation-Location"]
operation_id = read_operation_location.split("/")[-1]

#mientras el estado del proceso no sea completed se seguira ejecutando la api

while True:
    read_result = computervision_client.get_read_result(operation_id)

    if read_result.status not in ['notStarted', 'running']:
        break
    time.sleep(1)

# si ya se completo el proceso se guardara el curriculum en la variable cv

cv = ""

if read_result.status == OperationStatusCodes.succeeded:
    for text_result in read_result.analyze_result.read_results:
        for line in text_result.lines:
            cv += line.text
            cv += "\n"
print(cv)